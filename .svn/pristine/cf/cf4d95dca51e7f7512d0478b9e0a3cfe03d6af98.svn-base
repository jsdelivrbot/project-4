<template>
  <div class="banner">
    <div class="banner-top-menu">
        <a href="#" class="icon icon-add-round menu-add left"></a>
        <div class="banner-split left">
            <a href="#" class="icon icon-search menu-search"></a>
        </div>
        <div class="menu-btn-group left">
            <button class="btn-active">
                <span class="icon icon-alert"></span>
            </button>
            <button>
              <span class="icon icon-task"></span>
            </button>
        </div>
        <a href="javascript:;" class="menu-avatar left">TJ</a>
    </div>
    <div class="banner-full-page">
      <div class="banner-left-content">
          <h1>
            <a href="javascript:void(0)" class="banner-logo"></a>
          </h1>
          <div class="devsuite-base">
              <i class="icon icon-project"></i>
              <span class='selectBaseLabel' :title=projectLabel>
                {{projectLabel}}
                <span class="label-select">Select A Project Base</span>
              </span>
              <div class='devSuite-bars right' id="devSuite-bars">
               <!--<a href="javascript:void(0)" class="icon icon-qiehuan right" @click='projectBase'>
               </a>
                <transition name='projectPop' mode="out-in" appear>
                  <div class='projectPop' v-show='showProjectPop'>
                    <ul class='poplist'>
                      <li v-for='(proItem,$index) in bannerProjectList' v-if="$index !== 0" @click='selectProject($event,$index)'>
                        <p class='proItem left' :title=proItem.projectName>
                          <span class='proItem-text'>{{proItem.projectName}}</span>
                        </p>
                        <div class='clearfix'></div>
                      </li>
                    </ul>
                  </div>
                </transition>-->
               
                <Poptip placement="bottom" width="300">
                  <i class="icon icon-qiehuan s-icon right" style="font-size: 25px;"></i>
                  <div class="api" slot="content">
                    <!--<div style="width:220;height:200px;background:Red;position: absolute;top:10px;left:0px;"></div>-->
                    <h3 class="selectProject">Select Project</h3>
                    <div class="searchInput">
                      <input type="text" 
                            placeholder="Find Project" 
                            class="searchInput-val" 
                            v-model="projectBaseValue"
                            @keyup="queryProjectBase($event)"
                            >
                      <ul class="projectBaseList">
                        <li class="project-base-item" 
                            v-for="(baseItem,$index) in bannerProjectList" 
                            :title="baseItem.projectName"
                            v-show="$index !=0"
                            @click=selectProject($event,$index)
                            >
                          <div class="base-icon left">
                            <i class="fa fa-plane"></i>
                          </div>
                          <div class="base-name left">
                            <span>{{baseItem.projectName}}</span>
                          </div>
                          <div class="clearfix"></div>
                        </li>
                      </ul>
                    </div>
                  </div>
                </Poptip>
              </div>
          </div>
          <ul class="left-content-projects" id='left-content-projects' :class="{hasScrollBar: listShowScroll}">
            <li v-for='(proItem,$index) in subProjectName ' :title=proItem.subprojectName @click='toHomePage(proItem.projectId,$index)'>
              <router-link to="/homepage/development/boards" class='routerLink'>
                <!--<span class="icon icon-space"></span>-->
                <p class='proItem left'>
                  <i class='icon icon-space'></i>
                  <span class='proItem-text'>{{proItem.subprojectName}}</span>
                </p>
                <span class="right"></span>
                <div class='clearfix'></div>
              </router-link>
            </li>
          </ul>
          <p class="newProject">
            <a href="#">
              <span class="icon icon-add-round"></span>
              <span class="icon-text">New Project</span>
            </a>
          </p>
          <div class="left-content-bottom">
            <div style="clear:both;"></div>
          </div>
      </div>
      <div class="banner-welcome-info">
        <h2 class="welcome-info-time">{{currentTime}}</h2>
        <p class="welcome-info">Good Evenning, Terry John!
        </p>
        <div class="set-pop">
            <p class="pop-tip" @click="setBg($event)">
              <a href="javascript: void(0)" class="icon icon-setting"></a>
            </p>
            <div class="bg-panel" v-show="showBgPanel">
              <h3>Backgrounds</h3>
              <h4 class="bg-panel-colors">Colors</h4>
              <ul class="panel-colors-bg">
                <li v-for='(bgColor,$index) in bgColors'
                    class="colors-common"
                    :class="bgColor"
                    @click="chooseBgColor($event,$index)"
                >
                </li>
              </ul>
              <h4 class="bg-ph">Photos</h4>
              <ul class="bg-photos">
                <li v-for="(bgPhoto,$index) in bgPhotos"
                    @click="chooseBgPhoto($event,$index)"
                >
                  <a href="#">
                    <img :src='bgPhoto'>
                    <!--<img src="../../static/img/bg001.png">-->
                  </a>
                </li>
              </ul>
            </div>
        </div>
      </div>
      <div class="banner-line-gradient"></div>
      <!-- 桌面背景图片/颜色-->
      <div class="banner-bg" :class="backgroundColor"></div>
      <div class="banner-blur-bg"></div>
      <div class="banner-right-bar">
        <h2 class="notification">Notification</h2>
        <h3 class="date-recent">Today
          <i class="icon icon-add-round right x"></i>
        </h3>
        <ul class="banner-msg-list">
          <li>
            <div class="list-circle banner-choose">
              <span class="icon icon-check1"></span>
            </div>
            <div class="list-content">
              <p class="titletop">Just now</p>
              <h4 class="list-txt">Tom completed</h4>
              <p class="list-new">New Task</p>
            </div>
          </li>
          <li>
            <div class="list-circle banner-message">
              <span class="icon icon-message1"></span>
            </div>
            <div class="list-content">
              <p class="titletop">Just now</p>
              <h4 class="list-txt">Tom completed</h4>
              <p class="list-new">New Task</p>
            </div>
          </li>
          <li>
            <div class="list-circle banner-share">
              <span class="icon icon-share1"></span>
            </div>
            <div class="list-content">
              <p class="titletop">Just now</p>
              <h4 class="list-txt">Tom completed</h4>
              <p class="list-new">New Task</p>
            </div>
          </li>
        </ul>
      </div>
    </div>
  </div>
</template>
<script>
import { mapState,mapMutations } from 'vuex';
export default {
  created(){
    var _this = this;
    setInterval( () => { this.getTime() }, 200)
    this.getBannerProList();
    this.initProjectBase();
    this.computedSpaceWidth();
    window.onresize=function(){
      _this.computedSpaceWidth()
    }
  },
  data( ){
    return {
      projects: [
        { title: "DevSuite 10.0",tasks:3,icon:'icon-space'},
        { title: "DevSuite 10.0",tasks:2,icon:'icon-project'},
        { title: "DevSuite 10.0",tasks:2,icon:'icon-project'}
      ],
      showBgPanel: "",
      currentTime:'',
      bgColors:['color1','color2','color3','color4','color5','color6','color7','color8','color9'],
      bgPhotos:['static/img/bg001.png','static/img/bg002.png','static/img/bg003.png','static/img/bg004.png'],
      backgroundColor: ' ',
      bannerProjectList: '',
      showProjectPop: false,
      subProjectName: '',
      projectLabel: 'Select A Project Base',
      selectPop:false,
      searchProjectBase:'',
      projectBaseValue:'',
      spaceListMaxHeight:'',
      listShowScroll: false,
    }
  },
  computed: {
   
  },
  methods:{
    computedSpaceWidth(){
      if (window.innerHeight){
        var winHeight = window.innerHeight;
        // console.log(winHeight)
        this.spaceListMaxHeight = winHeight-200;
      }else if ((document.body) && (document.body.clientHeight)){
        var winHeight = document.body.clientHeight;
        // console.log(winHeight)
        this.spaceListMaxHeight = winHeight-200;
      }

      let spaceListHeight =  $('.left-content-projects').width();
      if(spaceListHeight>= this.spaceListMaxHeight) {
        this.listShowScroll = true;
      }
    },
    getTime(){
      var today = new Date();
      var h=today.getHours();
      var m=today.getMinutes();
      h = h<10 ? '0'+h : h;
      m = m<10 ? '0'+m : m;
      this.currentTime =  h+":"+m;
    },
    setBg(e){
      this.showBgPanel= !this.showBgPanel;
      e.e.stopPropagation();
    },
    chooseBgColor(event,index) {//choose background
      var backgroundClass = 'banner-bg';
      switch(index){
        case 0:{
          backgroundClass = 'banner-gredient11';
          break;
        }
        case 1:{
          backgroundClass = 'banner-gredient12';
          break;
        }
        case 2:{
          backgroundClass = 'banner-gredient13';
          break;
        }
        case 3:{
          backgroundClass = 'banner-gredient21';
          break;
        }
        case 4:{
          backgroundClass = 'banner-gredient22';
          break;
        }
        case 5:{
          backgroundClass = 'banner-gredient23';
          break;
        }
        case 6:{
          backgroundClass = 'banner-gredient31';
          break;
        }
        case 7:{
          backgroundClass = 'banner-gredient32';
          break;
        }
        case 8:{
          backgroundClass = 'banner-gredient33';
          break;
        }
        default:
          break;
      }
      return this.backgroundColor = backgroundClass ;
    },
    chooseBgPhoto(event,index) {
      var photo;
      switch(index){
        case 0:{
          photo = 'banner-photo11';
          break;
        }
        case 1:{
          photo = 'banner-photo12';
          break;
        }
        case 2:{
          photo = 'banner-photo21';
          break;
        }
        case 3:{
          photo = 'banner-photo22';
          break;
        }
        default:
          break;
      }
      return this.backgroundColor = photo ;
    },
    getBannerProList(){
      const BANNER_PROLIST_URL = DevTrackApi +'Projects?token='+APIToken;
      this.$http.get(BANNER_PROLIST_URL).then( response =>{
          this.bannerProjectList = response.body.data;
      }, error =>{
          console.log(error.info);
        })
    },
    projectBase() {
      if(this.showProjectPop){
        this.showProjectPop = false;
      }else {
        this.showProjectPop = true;
      }
    },
    selectProject(e,index) {
      var projectBaseId = this.bannerProjectList[index].projectId;
      this.projectLabel = this.bannerProjectList[index].projectName;
      this.changeProjectBase(this.bannerProjectList[index].projectName);
      this.changeProId(projectBaseId);
      const SUB_PRO_URL = DevTrackApi + 'SubProject/GetTree';
        this.axios.post(SUB_PRO_URL,{
            token: APIToken,
            projectId: projectBaseId,
        }).then(res=>{
          if(res.data.Success){
             const SAVE_USER_PATH = DevTrackApi+'UserPreference/Save';
             console.log(res.data.Data.projectId)
             let pathObj = {
                'ProjectId': 0,
                "UserId": 0,
                "PrefId": 3000001,
                "PreferenceValue": res.data.Data.projectId,
                "PreferenceText": "/banner",
             }
            this.axios.post(SAVE_USER_PATH,pathObj).then(res=>{
              //  保存用户访问路径和projectId
                console.log(res);
              },err=>{
                console.log(err)
            })
          }else {
            console.log('The http response failed')
          }
          this.changeIds({projectId:res.data.Data.projectId,subProjectId:''})
          if(res.data.Data.isClosed == false && res.data.Data.hasChild== true) {
            this.subProjectName = res.data.Data.nodes;
            this.addSpaceList(this.subProjectName);
            this.showProjectPop = false;
            $('.ivu-poptip-popper').hide();
          }else {
            console.log('The http response a wrong data')
          }
        },err=>{
          console.log(err);
        })
    },
    toHomePage(projectId,index) {
      var subId = this.subProjectName[index].subprojectId
      var proId= this.$store.state.projectId;
      var subType = this.subProjectName[index].subprojectType;
      sessionStorage.setItem("subId",subId);
      this.changeProIdAndSubId(proId,subId,true);
      sessionStorage.setItem("selectcontent",this.subProjectName[index].subprojectName);
      this.changeContent(this.subProjectName[index].subprojectName);
      this.changeSubType(subType);
    },
    changeProId(proId){
      this.$store.commit({
        type:'changeProId',
        projectId: proId,
      })
    },
    changeProIdAndSubId(proId,subId,flag){
      this.$store.commit({
        type:'changeIds',
        projectId: proId,
        subProjectId: subId,
        tempFlag: flag
      })
    },
    initProjectBase(){
      var projectId ;
      if(projectId !== '') {
        const SUB_PRO_URL = DevTrackApi + '/SubProject/GetTree';
        this.$http.post(SUB_PRO_URL,{
            token: APIToken,
            projectId: projectId,
        }).then(res=>{
           this.subProjectName = res.body.nodes;

          //  this.projectLabel = res.body.Data.subprojectName;
        },err=>{
          console.log(err);
        })
      }else {
        this.projectLabel = 'Select a project Base'
      }
    },
    changeContent(content){
      this.$store.commit({
        type: 'changeContent',
        selectContent: content
      })
    },
    changeProjectBase(base){
      this.$store.commit({
        type: 'changeProjectBase',
        projectBase: base
      })
    },
    changeSubType(subType) {
      this.$store.commit({
        type:'changeProjectBaseSubType',
        projectSubType: subType
      })
    },
    queryProjectBase(e){
       let searchValue = this.projectBaseValue ;
       let filter = searchValue.toUpperCase();
       let projectBaseArr = $('.projectBaseList>li');
       for (let i=0; i<projectBaseArr.length; i++) {
          var span = projectBaseArr[i].getElementsByTagName('span')[0];
          if ( span.innerHTML.toUpperCase().indexOf(filter) > -1) {
            projectBaseArr[i].style.display = ""; 
          }else {
            projectBaseArr[i].style.display = "none"; 
          }
      }
    },
    ...mapMutations(['addSpaceList','changeIds'])
  },
  components: {
    
  }
}
</script>
<style type="text/css">
  @import "banner.css";
  /* @import "banner.scss"; */
  
  @import '../../static/icon.css';
  @import '../../static/fonts.css';
  @import '../../node_modules/iview/dist/styles/iview.css';
</style>
