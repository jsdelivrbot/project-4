<template>
    <div class="folder">
        <p class="icons left" @click="toggle">
            <i v-if="isFolder" class="fa fa-caret-right" :class="[open ? 'folder-open': 'folder']"></i>
            <i v-if="!isFolder" class="icon"></i>
        </p>
        <span  class="folder-toggle left" >
            <p class="project-name"
              :class="'icon'+model.subprojectType"
              :title="model.subprojectName"
              :style="{current: model.sprintState<0,past: model.sprintState>0}"
              @click="projectClick(model)">
                {{ model.subprojectName }}
            </p>
        </span>
        <div class="clearfix"></div>
        <ul v-show="open" v-if="isFolder" class="node">
            <tree-list v-for="(item,$index) in model.nodes"  :key="$index" :model="item"></tree-list>
        </ul>
    </div>
</template>
<script> 
    import {mapState,mapMutations,mapActions} from 'vuex'
    export default {
    name: 'treeList',
    props: ['model'],
    data() {
      return {
        open: true,
        current: {
          background: "url('../../../../static/img/sprint_past.png') no-repeat left center",
          paddingLeft: '18px'
        },
        past: {
          background: "url('../../../../static/img/type-sprint.png') no-repeat left center",
          paddingLeft: '18px'
        }
        // isFolder: true
      }
    },
    computed: {
      isFolder: function() {
        return this.model.nodes && this.model.nodes.length
      },
      ...mapState(['subProjectId','DEV'])
    },
    methods: {
      toggle() {
        if (this.isFolder) {
          this.open = !this.open
        }
      },
      projectClick(item){
          console.log(item);
         this.changeIds({projectId:item.projectId,subProjectId:item.subprojectId});
         this.getDevBoardTasks({subProjectId: item.subprojectId,statusIds:this.DEV.devStatusIds});
         this.changeSearchPanelShow(false);
         this.changeBoardsBackend(false);
         this.changeCurPath(item);
         
        //  sessionStorage.setItem('subProjectId',item.subprojectId);
        var userId = sessionStorage.getItem('userId');
        var url = location.hash.replace('#','');
        var appProInfo = {
          "ProjectId": 0,
          "UserId": userId,
          "PrefId": 3000001,
          "PreferenceValue": item.projectId, 
          "PreferenceText": '',
        }
        var appSubProInfo = {
          "ProjectId": 0,
          "UserId": userId,
          "PrefId": 3000002,
          "PreferenceValue": item.subprojectId, 
          "PreferenceText": item.subprojectName,
        }
        var appUrlInfo = {
         "ProjectId": 0,
          "UserId": userId,      
          "PrefId": 3000004,    
          "PreferenceMemo": url,
        }
        
        var projectInfoId = {
          "ProjectId": item.subprojectId,
          "UserId": userId,
          "PrefId": 3000001,
          "PreferenceValue": item.projectId, 
          "PreferenceText": '',
        }
        var projectInfoSubId = {
          "ProjectId": item.subprojectId,
          "UserId": userId,
          "PrefId": 3000002,
          "PreferenceValue": item.subprojectId, 
          "PreferenceText": item.subprojectName,
        }
        var projectUrl = {
         "ProjectId": item.subprojectId,
          "UserId": userId,      
          "PrefId": 3000004,    
          "PreferenceMemo": url,
        }
        
        this.axios.all([
          this.axios.post(SAVE_HISTORY_PATH,appProInfo),
          this.axios.post(SAVE_HISTORY_PATH,appSubProInfo),
          this.axios.post(SAVE_HISTORY_PATH,appUrlInfo),
          this.axios.post(SAVE_HISTORY_PATH,projectInfoId),
          this.axios.post(SAVE_HISTORY_PATH,projectInfoSubId),
          this.axios.post(SAVE_HISTORY_PATH,projectUrl)
        ]).then(res=>{
            console.log(res);
          },err=>{
          console.log(err)
        })
      },
      ...mapMutations(['changeCurPath','changeSearchPanelShow','changeBoardsBackend','changeIds']),
      ...mapActions(['getDevBoardTasks'])
    }
  }
</script>
<style lang="scss" scoped='' type="text/css">
@import './folder.scss';
</style>