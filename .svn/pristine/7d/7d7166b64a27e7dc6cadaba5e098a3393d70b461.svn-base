<template>
  <div class="top">
    <div class="container">
      <div class="tool">
        <div class="logo left">
          <a href="#/banner" class=""></a>
        </div>
        <div class="versions left" @click='ClickProjectSpace'>
          <Select
            v-model="model1"
            placeholder="Select projectSpace"
            class="selectWidth"
            ref='headerBarSelect'
            @on-change="selectChange($event)"
          >
            <Option v-for="item in projectSpace" :value="item.value" :key="item">{{ item.label }}</Option>
          </Select>
        </div>
        <div class="useFor left">
          <div class="title">
          <span class="title-logo"  @click="toggle()">
            <span class="fa fa-table logo common left"></span>
            <span class="common text left">{{currentStatus}}</span>
          </span>
            <ul class="status-list" v-show="show">
              <li
                v-for="(current,index) in status"
                v-if="current.isClick == true"
                :current="currentStatus"
                @click="select(index,$event)"
                :class="{currentStyle:statusIndex == index}"
              >
              <router-link :to="current.listto" :id="current.list"> {{current.list}} </router-link>
              </li>
            </ul>
          </div>
        </div>
        <div class="tool-right right">
          <div class="search-bar left">
            <span class="search"></span>
            <input type="text" name="search">
          </div>
          <div class="set left">
            <span class="bell set-common left"></span>
            <span class="tj set-common left">Tj</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
    import Vue from 'vue';
    import store from '../../../vuex/store.js';
    import { mapState } from 'vuex';
    import { mapMutations } from 'vuex';
    export default {
    created() {
      this.getSelect(this.projectId,this.subProjectId);
      this.getLinkedSpace();
      this.addSpaceNumber();
    },
    props: ['current'],
    data:function(){
      return {
        status:[
          {list:'Home', listto:'/homepage/Home', isClick: true,spaceId: ''},
          {list:'Management', listto:'/homepage/management', isClick: false,spaceId: '2454'},
          {list:'Requirement', listto:'/homepage/Requirement', isClick: false,spaceId: '17'},
          {list:'Development', listto:'/homepage/development/boards', isClick: false,spaceId: '2518'},
          // {list:'Test Library', listto:'/homepage/testLibrary', isClick: true},
          // {list:'Test Run', listto:'/homepage/testRun', isClick: true},
          {list:'Test', listto:'/homepage/test', isClick: false,spaceId: ''},
          {list:'Members', listto:'/homepage/members', isClick: true,spaceId: ''},
          {list:'Administrator', listto:'/homepage/administrator', isClick: true,spaceId: ''}
        ],
        show: false,
        currentStatus: 'Development',
        statusIndex: '',
        projectSpace: [],
        selectContentSpace:'',
        flag: true
      }
    },
    computed: {
      isClick: function(){
          return false;
      },
      model1: function(){
        return this.$store.state.selectContent;
      },
      ...mapState(['projectId','subProjectId','spaceIds'])
    },
    methods: {
      toggle(){
        this.show = !this.show;
      },
      select(i,e){
        this.currentStatus = e.target.innerText;
        this.show = !this.show;
        this.statusIndex=i;
      },
      selectChange(e) {
        var list = this.projectSpace;
        for(var i=0;i<list.length;i++) {
          if(list[i].value == e) {
            var subId =this.selectContentSpace[i].subprojectId;
            var proId =this.selectContentSpace[i].projectId;
            if(this.flag) {
              this.flag = false;
            }else {
              this.flag = true;
            }
            this.selectChangeIds(proId,subId,this.flag);
            this.addContent(e);
          }
        }
      },
      getSelect(proId,subId){
        var content = this.model1;
        if( content !== '') {
          this.model1 = content;
        }else {
          this.model1 = sessionStorage.getItem("selectcontent");
        }
        const SELECT_URL = DevTrackApi + '/SubProject/GetTree';
        this.$http.post(SELECT_URL,{
          token: APIToken,
          projectId: proId,
          subprojectId: 0,
        }).then(res=>{
          this.selectContentSpace = res.body.nodes;
          var  spaces = res.body.nodes;
          for(var i=0;i<spaces.length;i++) {
              this.projectSpace.push({value:spaces[i].subprojectName,label:spaces[i].subprojectName})
          }
        },err=>{
          console.log(err);
        })
      },
      selectChangeIds(proId,subId,flag){
        this.$store.commit({
          type: 'changeIds',
          projectId: proId,
          subProjectId: subId,
          tempFlag: flag
        })
      },
      addContent(content) {
        this.$store.commit({
          type: 'changeContent',
          selectContent: content
        })
      },
      ClickProjectSpace() {
        this.show = false;
      },
      getLinkedSpace() {
        var proId = this.projectId;
        var subId = this.subProjectId;
        const GET_LINKE_SPACE = DevTrackApi + 'subproject/LinkedSpaces';
        this.$http.post(GET_LINKE_SPACE,{
          token: APIToken,
          projectId: proId,
          subprojectId: subId
        }).then(res=>{
           var menu = res.body;
           var temp = [];
           for(var i in menu) {
             if(typeof menu[i] == 'object') {
               temp.push(menu[i][0].spaceId);
             }
           }
           this.addSpaceIds(temp);
        },err=>{
          console.log(err);
        })
      },
      addSpaceIds(arr) {
        this.$store.commit({
          type: 'addSpaceIds',
          spaceIds: arr
        })
      },
    addSpaceNumber() {
        var menuList = this.status;
        var fragment = [];
        var spaceIdArr = [];
        for(var i=0; i<menuList.length; i++) {
          spaceIdArr.push(menuList[i].spaceId);
        }
        var result = new Array();
        var menus = this.spaceIds.toString();
        for(var i=0;i<spaceIdArr.length;i++) {
            if(menus.indexOf(spaceIdArr[i].toString()) == -1) {
                result.push(i);
            }
        }
        for(var j=0; j<result.length; j++) {
          var m = result[j];
          Vue.set(this.status[m],'isClick',true)
        }
    }
    },
    watch: {
      subProjectId: function() {
        this.$router.push({path: '/homepage/development/boards'});
        this.currentStatus = 'Development';
      }
    },
    store
    }
</script>
<style lang="scss" scoped="" type="text/css">
  @import 'headerBar.scss';


</style>
