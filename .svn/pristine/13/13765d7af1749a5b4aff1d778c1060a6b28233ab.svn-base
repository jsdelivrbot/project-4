<template>
    <div class="log-page" id="login">
        <div class="logo">
            <img src='../../../../static/img/icon_logo.png'>
        </div>
        <div class="input-field">
            <div class="userName user-field">
                <Input v-model="userName" placeholder="user name" style="width: 100%">
                    <Button slot="prepend" icon='person'></Button>
                </Input>
            </div>
            <div class="userPwd user-field">
                 <Input v-model="userPwd"  type="password" placeholder="user password" style="width: 100%">
                    <Button slot="prepend" icon='unlocked'></Button>
                 </Input>
            </div>
            <div class="language">
                <div class='language-label'>Select Langauage</div>
                <!--<Select v-model="language" style="width:100%;">
                    <Option v-for="item in languages" :value="item" :key="item">{{ item }}</Option>
                </Select>-->
                <div class="languageList">
                    <div class="currentSelect" @click="showLanguageList">
                        {{language}}
                        <i class="fa fa-caret-down caret" v-show="caretTop"></i>
                        <i class="fa fa-caret-up caret" v-show="!caretTop"></i>
                    </div>
                    <ul class="list" v-show="listShow">
                        <li v-for="item in languages" 
                            class="list-item" 
                            @click="selectThis(item)"
                            :class="{activeClass:language == item}">{{ item }}
                        </li>
                    </ul>
                </div>
            </div>
            <div class="remember">
                <Checkbox v-model="remember">Remember log in</Checkbox>
            </div>
            <div class="login-btn">
                <Button type="info" long @click="userLogIn">LogIn</Button>
            </div>
            <div class="forgetPwd">
                <a href="javascript:void(0)">forget password?</a>
            </div>
        </div>
    </div>
</template>
<script>
   import Vue from 'vue';
   import {mapState,mapMutations,mapActions} from 'vuex'
   export default {
    data: function() {
        return {
            showBackend    : false,
            userName: '',
            userPwd: '',
            language:'Default English',
            languages: ['Default English','English','简体中文'],
            remember: false,
            showUserLabel: false,
            onFocus: false,
            showPwdLabel:false,
            pwdFocus: false,
            formContent: true,
            email:'',
            showUserClearIcon: false,
            showPwdClearIcon: false,
            listShow: false,
            caretTop: true
        }
    },
    computed: {
        ...mapState([''])
    },
    methods: {
        userKeyUp(){
             if(this.userName.length >0){
                this.showUserLabel = true;
                this.showUserClearIcon = true;
            }else {
                this.showUserLabel = false;
                this.showUserClearIcon = false;
            }
        },
        readyInputUser() {
           this.onFocus = true;
           if( this.userName.length >0){
               this.showUserClearIcon = true;
           }
        },
        leaveUserInput() {
            // this.showUserClearIcon = false;
            this.onFocus = false;
        },
        pwdKeyUp(){
             if(this.userPwd.length >0){
                this.showPwdLabel = true;
                this.showPwdClearIcon = true;
            }else {
                this.showPwdLabel = false;
                this.showPwdClearIcon = false;
            }
        },
        readyInputPwd() {
            this.pwdFocus = true;
            if( this.userPwd.length >0){
                this.showPwdClearIcon = true;
            }
        },
        leavePwdInput() {
            this.pwdFocus = false;
            // this.showPwdClearIcon = false;
        },
        showFindPwd() {
            this.showForgotPwd = true;
            this.showBackend   = true;
        },
        closeFindPwd() {
            this.showForgotPwd = false;
            this.showBackend   = false;
        },
        userLogIn(){
            var _this = this;
            var param = 'grant_type=password&username='+this.userName+'&password='+this.userPwd;
            // for alm team
            var param = {
                "Grant_type": "password",
                "UserName": _this.userName,
                "Password": _this.userPwd
            }
            this.axios.post(USER_TOKEN,param).then(res=>{
                    if(res.data.Success == undefined) {
                        var user_token = res.data.access_token;
                        sessionStorage.setItem("user_token",user_token);
                        this.addUserInfo(res.data);
                        //判断之前是否登录
                        var query ={
                            "ProjectId":0,
                            "PrefIds": [
                                3000004
                            ]
                        }
                        this.axios.post(GET_HISTORY_INFO,query).then(res=>{
                                if(res.data.Success){
                                    var url;
                                    //未登录过
                                    if(res.data.Data.PreferenceText == ''){
                                        this.$router.push('/banner');
                                    }else {
                                        //登录过,跳转到之前访问页面
                                        for(let i=0;i<res.data.Data.length;i++) {
                                            if(res.data.Data[i].PreferenceText != ''){
                                                url = res.data.Data[i].PreferenceText;
                                            }
                                        }
                                       this.$router.push(url);
                                    }
                                }
                            },err=>{
                                console.log(err);
                        })
                    }else if(res.data.Success == false) {
                        console.log("Please check your user name or password")
                    }
                },err=>{
                console.log(err)
            })
        },
        forgetPwd(){
            this.formContent = false;
        },
        toLogIn(){
             this.formContent = true;
        },
        clearInputValue(){
            this.userName = ''
            this.showUserClearIcon = false;
            this.showUserLabel = false;
        },
        clearPwdValue(){
            this.userPwd = '';
            this.showPwdClearIcon = false;
            this.showPwdLabel = false;
        },
        showLanguageList(){
            var show = this.listShow;
            if (show) {
                this.listShow = false;
                this.caretTop = true;
            }else {
                 this.listShow = true;
                 this.caretTop = false;
            }
        },
        selectThis(item){
            this.language = item;
            this.listShow = false;
            this.caretTop = true;
        },
        ...mapMutations(['changeIds','addUserInfo']),
        ...mapActions([])
    }
   }
</script>
<style lang="scss" scoped="" type="text/css">
 @import './login.scss';
</style>