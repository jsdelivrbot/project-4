<template>
  <transition name="fade"  mode="out-in" appear>
      <div class="editPanel">
        <div class="edit-panel">
          <div class="details-panel-header">
            <p id="taskid"
               class="details-panel-header-title"
            >
            {{currentCardInfo.cardId}}</p>
            <i
            id="closePanel"
            class="icon-close icon-wrong"
            title="Close"
            @click="closeEditPanel"
          ></i>
          </div>
          <div class="details-panel-fields">
            <div class="field-wrapper sel-title">
            <p class="paragraph" title="Click to edit"
               v-show="showParagraph"
               @click="switchInput"
            >
              {{currentCardInfo.cardMsg}}
              <span v-if="currentCardInfo.cardImage">
                <img :src='currentCardInfo.cardImage'>
              </span>
            </p>
            <!--edit comments-->
            <div class="input-wrapper" v-show="!showParagraph">
              <input
                type="text"
                class="t-textbox"
                v-model="currentCardInfo.cardMsg"
                ref="editInput"
                placeholder=""
                @blur="switchParagraph"
              >
              <!--clear input value-->
              <i class="icon-wrong input-button-clear right"
                 title="clear"
                 @click="clearInputValue"
              ></i>
            </div>
          </div>
            <div class="field-wrapper sel-description">
            <div class="description">
              <div
                class="description-placeholder"
                v-show="showDesPlaceholder"
                @click="switchTextArea"
              >
                Edit description
              </div>
              <div class="description-edit">
              <textarea
                class="description-textarea"
                :class="{showStyle:blur}"
                v-show="!showDesPlaceholder"
                @blur="textAreaBlur"
                @focus="textAreaFocus"
              ></textarea>
                <div class="description-toolbar" v-if="descriptionToolbar">
                  <button id="btnSave"
                          class="btnSave btnCommon right"
                          @click="toolBtnSave"
                  >Save</button>
                  <button id="btnCancel"
                          class="btnCancel btnCommon right"
                          @click="toolBtnCancel"
                  >Cancel</button>
                </div>
              </div>
            </div>
          </div>
            <div class="detailspane__tab-container">
            <div class="calender-field">
              <hr class="po-details-pane__divider">
              <div class="po-field-wrapper">
                  <div class="po-iconrow">
                    <div class="po-tooltip__wrapper">
                      <i class="icon-person" title="Assign to person" v-show="iconPerson"></i>
                    </div>
                    <div class="po-tooltip__wrapper">
                      <i class="icon-calendar" title="Select a date"
                         v-show="currentCardInfo.cardCalendar == ''"></i>
                    </div>
                    <div class="po-tooltip__wrapper">
                      <i class="icon-playing-cards" title="Set priority value" v-show="iconPlayingCards"></i>
                    </div>
                  </div>
              </div>
              <hr class="po-details-pane__divider">
            </div>
            <!--select person-->
            <div class="po-field-wrapper sel-assignee_id">
                <div class="po-tooltip__wrapper sel-assignee_name"
                     v-show="assigneeName"
                     @click="assignSelectList"
                >
                  <div class="pp-details-pane__attribute pp-editable">
                    <div class="avatar__container avatar--mini left">
                      <div class="my-avatar left"
                           :class="currentCardInfo.cardType"
                      >
                        {{currentCardInfo.cardType}}
                      </div>
                      <span class="pp-details-pane__attribute-value">
                          {{currentCardInfo.cardName}}
                      </span>
                    </div>
                    <div class="clearfix"></div>
                  </div>
                </div>
                <div class="pp-objectpicker"
                     v-show="selectAssign"
                >
                  <div class="pp-input-wrapper">
                    <input  type="text"
                            placeholder="Assign person"
                            class="pp-input pp-revertible-input pp-form-input pp-objectpicker__input"
                    >
                  </div>
                  <button class="pp-btn-inInput pp-objectpicker__button"
                          v-show="caretDown">
                      <i class="fa fa-caret-down"></i>
                  </button>
                  <!--select assign person-->
                  <ul class="pp-comboboxlist">
                    <li class="pp-comboboxlist__row"
                        v-for="(person,$index) in assignPerson"
                        @click="selectPerson($event,$index)"
                        :class="{currentBgStyle:liIndex == $index}"
                    >
                      <span class="comboboxlist-li">
                        <div class="comboboxlist-li-image my-avatar left" :class="person.badge">
                              {{person.badge}}
                              <i class="icon-remove-square" v-if="$index == 0"></i>
                        </div>
                        <span class="comboboxlist-li-text left">
                              {{person.name}}
                        </span>
                        <div class="clearfix"></div>
                      </span>
                    </li>
                  </ul>
                </div>
                <!--appear calendar and date-->
                <div class="cardDate" v-show="currentCardInfo.cardCalendar != ''">
                  <div class="dateSelect" @click="dateSelect" v-show="iconCalendarField">
                    <div class="icon-calendar-date left">
                      <i class="icon-calendar"></i>
                    </div>
                    <span class="icon-calendar-date-detail left">
                      {{currentCardInfo.cardCalendar | date}}
                    </span>
                    <div class="clearfix"></div>
                  </div>
                  <div class="date-picker" v-show="!iconCalendarField">
                    <Date-picker
                            type="date"
                            ref="test"
                            value=" "
                            v-model="currentCardInfo.cardCalendar"
                            placeholder="6/5/20"
                            format="dd/MM/yyyy"
                            style="width: 150px;border: #000;color: #999;"
                            @on-change="getDatePicker()"
                    >
                    </Date-picker>
                    <i class="pp-dateinput-icon icon-wrong date-remove"></i>
                  </div>
                </div>
            </div>
            <!-- set Status-->
            <div class="po-field-wrapper edit-list">
              <div class="sel-status_info"
                   v-show="currentStatusShow"
                   @click="editPanelStatus">
                  <i class="sel-status-icon icon-status category-none">
                    <span class="icon-status-text" ref="statusText">
                      {{statusText}}
                    </span>
                  </i>
              </div>
              <div class="list-objectpicker" v-show="!currentStatusShow">
                <div class="list-input-wrapper">
                  <input type="text"
                          class="pp-input pp-revertible-input pp-form-input pp-objectpicker__input"
                         placeholder="Move to another status column on the board."
                  >
                </div>
                <button class="list-btn-inInput list-objectpicker__button">
                    <i class="list-objectpicker__icon fa fa-caret-down"></i>
                </button>
                <!--select status list-->
                <ul class="list-comboboxlist">
                    <li class="list-comboboxlist__row"
                        v-for="(item,$index) in listStatus"
                        @click="statusListLi($event,$index)">
                         <span class="list-li">
                           <div class="list-row-image">
                             <i class="icon-status pp-list__row__artifact-icon left"></i>
                           </div>
                           <span class="list-row-text left">{{item}}</span>
                           <div class="clear"></div>
                         </span>
                    </li>
                </ul>
              </div>
              <!--planlet-->
              <div class="editPanelPlanlet">
                <i class="icon-planlet">
                  3/333
                </i>
              </div>
            </div>
          </div>
          </div>
          <!--comments-->
          <div class="edit-comments">
            <div class=edit-comments-tittle>
              <div class="comments-count left">0 Comments</div>
              <div class="comments-history right">
                <span class="icon-checkmark pp-checkbox__checkmark-animate">
                  Show history
                </span>
              </div>
              <div class="clearfix"></div>
            </div>
            <div class="edit-newComments-container"
                 :class="{addBorder:addBorderStyle}"
            >
              <div class="edit-smarttextarea">
                <div class="edit-comment_tip">
                  <p>Comment and type @ to notify other people.</p>
                </div>
                <textarea class="edit-textarea"
                  placeholder="Comment and type @ to notify other people."
                  @focus="commentsTextAreaFocus"
                  @blur="commentsTextAreaBlur"
                >
                </textarea>
              </div>
              <div class="edit-newComments-belt" v-show="commentsBelt">
                <ul class="edit-belt-container left">
                  <li class="belt-tooltip-wrapper left">
                        <i class="icon-person"></i>
                  </li>
                  <li class="belt-tooltip-wrapper left">
                      <i class="icon-clip"></i>
                  </li>
                  <div class="clearfix"></div>
                </ul>
                <label class="edit-comments-button right">
                  Comment
                </label>
                <div class="clearfix"></div>
              </div>
            </div>
            <div class="comments-content">
              <div class="comments-content-header">
                <div class="edit-avatar left">{{currentCardInfo.cardType}}</div>
                <div class="edit-currenInfo left">
                  <span class="edit-name">tester</span>
                  <span class="edit-time">{{editTime}}</span>
                </div>
                <div class="icon-dots right">
                  <i class="icon-dots-vertical"></i>
                </div>
                <div class="clearfix"></div>
              </div>
              <div class="comments-box">
                {{currentCardInfo.cardMsg}}
                <!--<span v-if="currentCardInfo.cardImage">-->
                  <!--<img :src='currentCardInfo.cardImage'>-->
                <!--</span>-->
              </div>
              <p class="link-text">Like</p>
            </div>
          </div>
        </div>
      </div>
    </transition>
</template>

<script>
  import Vue from 'vue';
  export default {
    created() {
      this.dateFilter();
    },
    props: {
      editPanelShow: {
        type: Boolean
      },
      currentCardInfo: {
        required: true
      }
    },
    data: function(){
      return {
        showParagraph: true,
        showDesPlaceholder: true,
        blur: false,
        hasAvatar: true,
        descriptionToolbar: '',
        iconPerson: false,
        iconPlayingCards: true,
        liIndex:'',
        assignPerson:[
          { badge: ' ',name:"Remove"},
          { badge: 'tj',name:"Terry Johnson"},
          { badge: 'tz',name:"Tim Zero"},
          { badge: 'jc',name:"Jimery Cook"},
          { badge: 'ww',name:"William Wall"},
          { badge: 'ph',name:"Phillips Hunt"},
          { badge: 'jz',name:"John Zipper"},
        ],
        assigneeName: ' ',
        selectAssign: false,
        caretDown: true,
        iconCalendarField: true,
        listStatus: ['To Do','In Progress','QA Floater Verify','Close Down'],
//        statusText:'To Do',
        currentStatusShow: true,
        commentsBelt: '',
        addBorderStyle: ''
      }
    },
    computed: {
      editTime: function() {// update edit time
        let now = new Date();
        let year = now.getFullYear();
        let day = now.getDate();
        let month = now.getMonth()+1;
        let hour = now.getHours();
        let minute = now.getMinutes();
        day = day<10 ? '0'+day : day;
        month = month<10 ? '0'+month : month;
        return day+"/"+month+"/"+year+" "+hour+":"+minute;
      },
      statusText: function(){
        var status = this.currentCardInfo.status;//获取父组件传递的status
        var statusName = "";
        switch( status){
          case 1:{
            statusName = "To Do";
            break;
          }
          case 2:{
            statusName = "In Progress";
            break;
          }
          case 3:{
            statusName = "QA Floater Verify";
            break;
          }
          case 4:{
            statusName = "Close Done";
            break;
          }
          default:
            break;
        }
        return statusName;
      }
    },
    methods: {
      switchInput: function(){
        this.showParagraph = false;
      },
      clearInputValue: function (){// clear input value
        this.$refs.editInput.value= ' '
      },
      switchParagraph: function(){
        this.showParagraph = true;
      },
      switchTextArea: function(){
        this.showDesPlaceholder = false;
      },
      textAreaBlur: function(){
        this.blur = true;
      },
      textAreaFocus: function(){
        this.blur = false;
        this.descriptionToolbar = true;
      },
      toolBtnSave: function() {
        this.descriptionToolbar = false;
        this.showDesPlaceholder = true;
      },
      toolBtnCancel: function() {
        this.descriptionToolbar = false;
        this.showDesPlaceholder = true;
      },
      closeEditPanel: function(){
        this.$emit('closeEditPanel',false);
        //console.log(typeof this.currentCardInfo);
      },
      assignSelectList: function(){
        this.assigneeName = false;
        this.selectAssign = true;
      },
      selectPerson: function(event,index) {
        this.currentCardInfo.cardName = this.assignPerson[index].name;
        this.currentCardInfo.cardType = this.assignPerson[index].badge;
        this.assigneeName = true;
        this.selectAssign = false;
        this.liIndex = index;
        if( index == 0) {//删除时，该列隐藏
          this.assigneeName = false;
        }
      },
      dateSelect: function(){
        this.iconCalendarField = false;
      },
      editPanelStatus: function(){
        this.currentStatusShow = false;
      },
      statusListLi: function(event,index){
        this.currentStatusShow = true;
//        this.statusText = this.listStatus[index];
        this.$emit('listStatusIndex',index);
        this.$refs.statusText.innerHTML= this.listStatus[index];
        this.currentCardInfo.status = index+1;
        //console.log(this.currentCardInfo.status)
      },
      commentsTextAreaFocus: function() {
        this.addBorderStyle = true;
        this.commentsBelt = true;
      },
      commentsTextAreaBlur: function(){
        this.addBorderStyle = false;
        this.commentsBelt = false;
      },
      getDatePicker: function() { //edit panel time
        this.iconCalendarField = true;
      },
      dateFilter: function() { //自定义时间过滤器
        Date.prototype.format = function(format)
        {
          var o ={
            "M+" : this.getMonth()+1, //month
            "d+" : this.getDate(),    //day
            "h+" : this.getHours(),   //hour
            "m+" : this.getMinutes(), //minute
            "s+" : this.getSeconds(), //second
            "q+" : Math.floor((this.getMonth()+3)/3),  //quarter
            "S" : this.getMilliseconds() //millisecond
          }
          if(/(y+)/.test(format))
            format=format.replace(RegExp.$1,(this.getFullYear()+"").substr(4 - RegExp.$1.length));
          for(var k in o)
            if(new RegExp("("+ k +")").test(format))
              format = format.replace(RegExp.$1,RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
          return format;
        };
        Vue.filter('date',function (value) {
          var today = new Date(value);
          var localeString = today.toLocaleString();
          var ddd = new Date(localeString);
          return ddd.format('yyyy/MM/dd');
        })
      }
    }
  }
</script>
<style lang="scss" scoped="" type="text/css">
  @import './editPanel.scss';
  @import '../../../../static/icon.css';
</style>
