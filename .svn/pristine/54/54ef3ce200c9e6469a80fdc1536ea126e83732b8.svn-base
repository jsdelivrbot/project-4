<template>
  <div class="boards">
    <div class="boards-title">
        <div class="boards-container">
            <!--header breadcrumb-->
            <div class="boards-title-left left">
              <div class="title-bread">
                <span class="file-png left">
                  <i class="fa fa-file-o"></i>
                </span>
                <span class="left title-common">DevSuite 10.0</span>
                <span class="left title-common"> >> </span>
                <span class="left title-common">Sprint 12 Feb.5-Feb, 19.2017</span>
                <div class="search-mes left title-common"
                     @click="openSearchPanel"
                >
                  <i class="fa fa-caret-up"></i>
                </div>
                <!--search panel-->
                <transition name="searchPanel" mode="out-in" appear>
                  <div
                  class="search-mes-panel"
                  v-show="isSearchPanelShow"
                  >
                  <div class="search-mes-panel-top">
                      <span class="x right" @click="closeSearchPanel">
                        <i  class="fa fa-close"></i>
                      </span>
                  </div>
                  <div class="search-mes-input">
                    <span class="search-msg-icon left">
                      <i class="fa fa-search"></i>
                    </span>
                    <input type="text" class="left search-mes-input-bar" placeholder="Search">
                    <div class="clearfix"></div>
                  </div>
                  <div class="mes-panel-list">
                       <!--First level -->
                      <div class="panel-first-title">
                          <span class="first-title-icon left" @click="allProjectList($event)">
                            <i class="fa fa-caret-down"></i>
                          </span>
                          <span class="first-title-content left">
                            Sample Development Project - DevSuite 10.1
                          </span>
                          <ul class="second-title" v-show="projectList">
                              <li class="dev-items" v-for="(listItem,$index) in projectList">
                                <span class="dev-items-icon left">
                                  <i class="fa fa-caret-down"></i>
                                </span>
                                <span class="second-title-content left" @click="showSprintList($event,$index)">
                                  {{ listItem.projectName}}
                                  <!--Content Sharing Manager V1.0 (Agile)-->
                                </span>
                                <div class="clearfix"></div>
                                <ul class="dev-item" v-show="sprintList">
                                  <li v-for="(task,$index) in tasks.tasks">
                                    <img src="../../../static/img/type-sprint.png">
                                    {{task.taskId}}-task 12 Fed 5 -Fed 19,2017
                                  </li>
                                </ul>
                              </li>
                          </ul>
                      </div>
                      <!-- Second level-->
                  </div>
                </div>
                </transition>
                <div class="filter left title-common">
                  <i
                    class="fa fa-filter "
                    id="boards-filter-icon"
                    @click="openFilter"
                  ></i>
                  <transition name="filterPanel" mode="out-in" appear>
                    <div
                      class="filter-select"
                      :class="{filterPanelShow:isFilterShow}"
                      v-show="isFilterShow"
                    >
                      <div class="filter-top">
                      <span class="filter-top-text left">
                        Filter Tasks
                      </span>
                      <span class="x right" @click="closeFilter">
                        <i  class="fa fa-close"></i>
                      </span>
                      </div>
                      <ul class="filter-by">
                        <li v-for="item in filterByItems"
                            class="filter-by-item"
                            :class="item.icon">
                          <a href="javascript:;" :class=item.icon>
                            {{item.name}}
                          </a>
                        </li>
                      </ul>
                    </div>
                  </transition>
                </div>
              </div>
              <div
                class="boardsBackend"
                v-show="isBoardsBackend"
              ></div>
            </div>
            <!--filter by month fullScreen-->
            <div class="boards-title-right right">
                <a href="javascript:;"  class="month" @click="filterMonth">
                  {{monthTitle}}<i class="fa fa-caret-down"></i>
                  <ul class="months" v-show="filterMonthShow">
                      <li v-for="(month,$index) in months"
                          @click.stop="chooseMonth($event,$index)"
                          :month="monthTitle"
                          :class="{monthStyle:monthIndex == $index}"
                      >
                        {{month}}
                      </li>
                  </ul>
                </a>
                <a href="javascript:;" @click="chooseStatus" class="chooseStatus">
                  <i class="fa fa-gear"></i>
                  <i class="fa fa-caret-down"></i>
                  <div class="setting"  v-show="settingListShow">
                    <ul>
                      <li class="setting-item" v-for="(item,$index) in statusList">
                        <input type="checkbox"  v-model='selectedStatusIndex' :value=$index>
                        <span class="item-status">{{item.ChoiceName}}</span>
                      </li>
                    </ul>
                    <div class="setting-btn">
                      <span class="btn-ok setting-btn" @click.stop="btnOk">OK</span>
                      <span class="btn-reset setting-btn" @click.stop="btnNo">NO</span>
                    </div>
                  </div>
                </a>
                <a href="javascript:;" @click="fullScreen" title="Toggle Full Screen">
                  <i class="fa fa-expand"></i>
                </a>
            </div>
            <div class="clearfix"></div>
          </div>
        <!-- responsive column below-->
        <div class="boards-status-title">
          <div class="status-title-common" v-for="(status,$index) in statusList" v-show=status.IsActive>
            {{status.ChoiceName}}
            <span class="right">{{ status.ChoiceId }}</span>
          </div>
        </div>
        <!--card list in below-->
        <div class="wrapper" style="width: 100%;">
          <div id="toDo"
               status="1"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <span class="to-add-card" @click="addNewTask" draggable="false">
              <div class="add-card-wrapper">
                <div
                  class="add-card-box"
                  id="add-card-box"
                  title="New Task"
                >
                  <span class="icon-ad">+</span>
                </div>
                <div class="form-box" id="form-box">
                  <form action="" class="form-box-content">
                    <div class="form-input-wrapper">
                      <input
                        type="text"
                        maxlength="200"
                        placeholder="New Task"
                        class="newinput"
                      >
                    </div>
                    <button type="submit" class="form-input-btn">
                      <span class="icon-btn">+</span>
                    </button>
                  </form>
                </div>
              </div>
            </span>
            <div
              class="action-card"
              status="1"
              v-for="(cardInfo,$index) in todoCardInfos"
              :key="cardInfo.taskId"
              @click.capture="toDoCardDetails($event,$index)"
              :class="{'active':todocardInfo.active,'unactive':!cardInfo.active}"
            >
              <div class="card-content">
                <p class="bg-content content-tz right"
                   :class=cardInfo.values[7].value
                   v-if="cardInfo.cardType !== ''"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>Please see attached image, and solved the line problem</p>
                  <img :src='cardInfo.cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar">
                    Jun 29
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div id="qaReview"
               status="2"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <div
              class="action-card"
              status="3"
              v-for="(cardInfo,$index) in qaReviewCardInfos"
              :key="cardInfo.taskId"
              @click.capture="verifyCardDetails($event,$index)"
              :class="{'active':verifycardInfo.active,'unactive':!cardInfo.active}"
            >
              <div class="card-content">
                <p class="bg-content right"
                   :class=cardInfo.values[7].value
                   v-if="cardInfo.cardType !== ''"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>Please removed the dot, at the end of paragraph</p>
                  <img :src='cardInfo.cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar" v-if="cardInfo.cardCalendar !== ''">
                    Sep 22
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div id="dropped"
               status="3"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <div
              class="action-card"
              status="3"
              v-for="(cardInfo,$index) in doneCardInfos"
              :key="cardInfo.taskId"
              @click.capture="doneCardDetails($event,$index)"
              :class="{'active':donecardInfo.active,'unactive':!cardInfo.active}"
            >
              <div class="card-content">
                <p class="bg-content right"
                   :class=cardInfo.values[7].value
                   v-if="cardInfo.cardType !== ''"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>The bug you need to quickly solevd , or it'll be down</p>
                  <!--<img src="../../../static/img/demo1.png" v-if="cardInfo.cardImage !== ''">-->
                  <img :src='cardInfo.cardImage' class='cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar" v-if="cardInfo.cardCalendar !== ''">
                    Jan 29
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div id="qaVerify"
               status="4"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <div
              class="action-card"
              status="4"
              v-for="(cardInfo,$index) in verifyCardInfos"
              :key="cardInfo.taskId"
              @click.capture="verifyCardDetails($event,$index)"
              :class="{'active':verifycardInfo.active,'unactive':!cardInfo.active}"
            >
              <div class="card-content">
                <p class="bg-content right"
                   :class=cardInfo.values[7].value
                   v-if="cardInfo.cardType !== ''"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>DT10.1-(DevTrack IE)In IE browser,preview the document as PDF/word/PPT anything</p>
                  <img :src='cardInfo.cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar" v-if="cardInfo.cardCalendar !== ''">
                    Feb 17
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div id="done"
               status="5"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <div
              class="action-card"
              status="5"
              v-for="(cardInfo,$index) in doneCardInfos"
              :key="cardInfo.taskId"
              @click.capture="doneCardDetails($event,$index)"
              :class="{'active':donecardInfo.active,'unactive':!cardInfo.active}"
            >
              <div class="card-content">
                <p class="bg-content right"
                   :class=cardInfo.values[7].value
                   v-if="cardInfo.cardType !== ''"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>How to set width of a div in percent in JavaScript?	</p>
                  <img :src='cardInfo.cardImage' class='cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar" v-if="cardInfo.cardCalendar">
                    Feb 20
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div id="inProgress"
               status="6"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <div
              class="action-card"
              status="6"
              v-for="(cardInfo,$index) in processCardInfos"
              :key="cardInfo.taskId"
              @click.capture="progressCardDetails($event,$index)"
              :class="{ 'active':processcardInfo.active,
                        'unactive':!cardInfo.active}"
              draggable='true'
              @dragstart='testDrag($event)'
            >
              <div class="card-content">
                <p
                  class="bg-content  right"
                  :class=cardInfo.values[7].value
                  v-if="cardInfo.cardType !== ''"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>There's also the possibility of moving changing their</p>
                  <!--<img src="../../../static/img/demo.png" v-if="cardInfo.cardImage !== ''">-->
                  <img :src='cardInfo.cardImage' class='cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar" v-if="cardInfo.cardCalendar">
                    {{cardInfo.cardCalendar}}
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
          <div id="reviewed"
               status="2"
               class="status-wrapper container"
               v-dragula="box"
               service="effects"
          >
            <div
              class="action-card"
              status="2"
              v-for="(cardInfo,$index) in reviewedCardInfos"
              :key="cardInfo.taskId"
              @click.capture="progressCardDetails($event,$index)"
              :class="{ 'active':processcardInfo.active,
                        'unactive':!cardInfo.active}"
              @dragstart='testDrag($event)'
            >
              <div class="card-content">
                <p
                  class="bg-content  right"
                  :class=cardInfo.values[7].value
                  v-if="cardInfo.values[7].value !== ' '"
                >{{cardInfo.values[7].value | assignedName}}</p>
                <h4 class="card-msg">
                  <p>There's also the possibility of changing their</p>
                  <img :src='cardInfo.cardImage' class='cardImage' v-if="cardInfo.cardImage !== ''">
                </h4>
              </div>
              <div class="card-meta">
                <div class="card-properties left">
                  <i class="icon-planlet"></i>
                  <i class="icon-calendar" v-if="cardInfo.cardCalendar !== ''">
                    Feb 19
                  </i>
                </div>
                <span class="id-badge right">ID{{cardInfo.taskId}}</span>
                <div class="clearfix"></div>
              </div>
            </div>
          </div>
        </div>
        <!-- add new task-->
        <div class="newTask-panel" v-if="newTaskPanel">
          <Form ref="formValidate" :model="formValidate" :rules="ruleValidate" :label-width="80">
            <Form-item label="title" prop="title">
              <Input v-model="formValidate.title" placeholder="Please input title"></Input>
            </Form-item>
            <Form-item label="status" prop="status">
              <Select v-model="formValidate.city" placeholder="select ownner">
                <Option value="terry johson">terry johson</Option>
                <Option value="Jimery Zero">Jimery Zero</Option>
                <Option value="jack warmmer">jack warmmer</Option>
              </Select>
            </Form-item>
            <Form-item label="dueDate">
              <Row>
                <Col span="11">
                <Form-item prop="date">
                  <Date-picker type="date" placeholder="select date" v-model="formValidate.date"></Date-picker>
                </Form-item>
                </Col>
                <Col span="2" style="text-align: center">-</Col>
              </Row>
            </Form-item>
            <Form-item label="description" prop="desc">
              <Input v-model="formValidate.desc" type="textarea" :autosize="{minRows: 2,maxRows: 5}" placeholder="Please Input..."></Input>
            </Form-item>
            <Form-item>
              <Button type="primary" @click="handleSubmit()">提交</Button>
              <Button type="ghost" @click="" style="margin-left: 8px">重置</Button>
            </Form-item>
          </Form>
        </div>
    </div>
    <edit-panel
      v-show:editPanelShow="showEditPanel"
      :currentCardInfo="cardInfo"
      @listStatusIndex="hasListenedIndex"
      @closeEditPanel="getEventData">
    </edit-panel>
  </div>
</template>
<script>
  import Vue from 'vue'
  import editPanel from '../common/editPanel/EditPanel';
  export default {
    created () {
      let dragula = this.$dragula
      let service = dragula.createService({
        name: 'effects',
        drake: {
          copy: false
        }
      })
      let log = console.log
      service.on({
          'effects:removeModel': ({name, el, source, dragIndex, model}) => {
          el.classList.remove('ex-moved');
    },
      'effects:dropModel': ({name, el, source, target, dropIndex, model}) => {
        //el.classList.add('ex-moved');
      },
      accepts: ({el, target}) => {
        return true;
      },
      drag: ({el, source, target, container}) => {
        el.classList.remove('ex-moved')
        el.classList.remove('active')
      },
      drop: (opts) => {
        const {el, container, model} = opts
        el.classList.add('ex-moved');
      },
      over: ({el, container}) => {
       el.classList.add('ex-moved')
       el.classList.add('bg-placeholder')
      },
      out: ({el, container}) => {
        el.classList.add('ex-moved')
        el.classList.remove('bg-placeholder')
      }
    });
      this.uppercaseFilter();//过滤大写字母
      this.dateFilter();//时间转换
      this.getProjectListData();//project list
      this.getStatusList();  //status
      this.assignedName();//filter name abbrasive
    },
    data: function() {
      return {
        formValidate: {
          name: '',
          mail: '',
          city: '',
          gender: '',
          interest: [],
          date: '',
          time: '',
          desc: ''
        },//add new task
        ruleValidate: {
          name: [
            { required: true, message: '姓名不能为空', trigger: 'blur' }
          ],
          mail: [
            { required: true, message: '邮箱不能为空', trigger: 'blur' },
            { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }
          ],
          city: [
            { required: true, message: '请选择城市', trigger: 'change' }
          ],
          gender: [
            { required: true, message: '请选择性别', trigger: 'change' }
          ],
          interest: [
            { required: true, type: 'array', min: 1, message: '至少选择一个爱好', trigger: 'change' },
            { type: 'array', max: 2, message: '最多选择两个爱好', trigger: 'change' }
          ],
          date: [
            { required: true, type: 'date', message: '请选择日期', trigger: 'change' }
          ],
          time: [
            { required: true, type: 'date', message: '请选择时间', trigger: 'change' }
          ],
          desc: [
            { required: true, message: '请输入个人介绍', trigger: 'blur' },
            { type: 'string', min: 20, message: '介绍不能少于20字', trigger: 'blur' }
          ]
        },// add new task
        newTaskPanel: false,
        box: [ ],
        end: '',
        settingListShow: false,//show status list
        isTransform: false,
        projectList: '',//project list data
        sprintList: false,
        filterByItems: [
          { name: 'Followed by',icon:'followby'},
          { name: 'Assigned by',icon:'assigned'},
          { name: 'Due date',icon:'duedate'},
          { name: 'Tags',icon:'tags'},
          { name: 'Status by',icon:'statusby'}
        ],
        isFilterShow: false,
        isSearchPanelShow: false,
        isBoardsBackend: false,
        todoCardInfos: [ ],
        processCardInfos: [ ],
        verifyCardInfos: [ ],
        doneCardInfos: [ ],
        qaReviewCardInfos: [ ],
        droppedCardInfos: [ ],
        reviewedCardInfos: [ ],
        showEditPanel: false,
        cardInfo: '',//data
        todocardInfo: '',
        processcardInfo: '',
        verifycardInfo: '',
        donecardInfo: '',
        months: ['all','Jan','Feb','Mar','Apr','May','June',' July','Aug','Sept','Oct','Nov','Dec'],
        monthTitle: 'Month',
        monthIndex: '',
        filterMonthShow: false,
        statusList:'',
        selectedStatusIndex: [], //use for store selected status to display
        tasks: '',//store all project tasks
        projectId: ''
      }
    },
    computed: {
      toDoNumber: function(){
        return this.todoCardInfos.length;
      },
      inProgressNumber: function(){
        return this.processCardInfos.length;
      },
      verifyNumber: function(){
        return this.verifyCardInfos.length;
      },
      doneNumber: function(){
        return this.doneCardInfos.length;
      },
    },
    methods: {
      fullScreen() {// full Screen
        var el = document.documentElement;
        var rfs = el.requestFullScreen || el.webkitRequestFullScreen || el.mozRequestFullScreen || el.msRequestFullScreen;
        if (typeof rfs != "undefined" && rfs) {
          rfs.call(el);
        } else if (typeof window.ActiveXObject != "undefined") {
          var wscript = new ActiveXObject("WScript.Shell");
          if (wscript != null) {
            wscript.SendKeys("{F11}");
          }
        }
      },
      openSearchPanel(){
        this.isTransform = true;
        this.isSearchPanelShow=true;
        this.isBoardsBackend =true;
        $(".search-mes").addClass("transform");
      },
      closeSearchPanel(){
        this.isSearchPanelShow=false;
        this.isBoardsBackend = false;
        $(".search-mes").removeClass("transform");
      },
      openFilter(){
        this.isFilterShow = true;
        this.isBoardsBackend =true
      },
      closeFilter(){
        this.isFilterShow = false;
        this.isBoardsBackend = false
      },
      handleSubmit(){
        this.newTaskPanel = false;
        $("#add-card-box").css('display',"block");
        $("#form-box").css('display',"none");
      },
      addNewTask(){
        $("#add-card-box").css('display',"none");
        $("#form-box").css('display',"block");
        this.newTaskPanel = true;
      },
      newinputBlur(){

      },
      toDoCardDetails(event,index){
        this.showEditPanel = true;
        this.todocardInfo=this.todoCardInfos[index];
        this.cardInfo = this.todoCardInfos[index];
        this.processCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.verifyCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.doneCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.$nextTick(function(){//点击时添加card背景色
          this.todoCardInfos.forEach(function(item){
            Vue.set(item,'active', false)
          });
          Vue.set(this.todoCardInfos[index],'active',true)
        });
      },
      progressCardDetails(event,index){
        this.showEditPanel = true;
        this.processcardInfo=this.processCardInfos[index];
        this.cardInfo = this.processCardInfos[index];
        this.todoCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.verifyCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.doneCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.$nextTick(function(){//点击时添加card背景色
          this.processCardInfos.forEach(function(item){
            Vue.set(item,'active',false);
          });
          Vue.set(this.processCardInfos[index],'active',true)
        });

      },
      verifyCardDetails(event,index){
        this.showEditPanel = true;
        this.verifycardInfo=this.verifyCardInfos[index];
        this.cardInfo = this.verifyCardInfos[index];
        this.todoCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.processCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.doneCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.$nextTick(function(){//点击时添加card背景色
          this.verifyCardInfos.forEach(function(item){
            Vue.set(item,'active',false);
          });
          Vue.set(this.verifyCardInfos[index],'active',true)
        });
      },
      doneCardDetails(event,index){
        this.showEditPanel = true;
        this.donecardInfo=this.doneCardInfos[index];
        this.cardInfo = this.doneCardInfos[index];
        this.todoCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.processCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.verifyCardInfos.forEach(function(item){
          Vue.set(item,'active', false)
        });
        this.$nextTick(function(){//点击时添加card背景色
          this.doneCardInfos.forEach(function(item){
            Vue.set(item,'active',false);
          });
          Vue.set(this.doneCardInfos[index],'active',true)
        });
      },
      getEventData(b){
        this.showEditPanel = b;
      },
      cardEnd(){
        this.end = true;
      },
      uppercaseFilter(){//定义字母大写过滤器
        Vue.filter('uppercase', function(value) {
          if (!value) { return ''}
          value = value.toString()
          return value.toUpperCase();
        })
      },
      dateFilter() { //自定义时间过滤器
        Date.prototype.format = function(format)
        {
          var o ={
            "M+" : this.getMonth()+1, //month
            "d+" : this.getDate(),    //day
            "h+" : this.getHours(),   //hour
            "m+" : this.getMinutes(), //minute
            "s+" : this.getSeconds(), //second
            "q+" : Math.floor((this.getMonth()+3)/3),  //quarter
            "S" : this.getMilliseconds() //millisecond
          }
          if(/(y+)/.test(format))
            format=format.replace(RegExp.$1,(this.getFullYear()+"").substr(4 - RegExp.$1.length));
          for(var k in o)
            if(new RegExp("("+ k +")").test(format))
              format = format.replace(RegExp.$1,RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
          return format;
        };
        Vue.filter('date',function (value) {
//          var today = new Date(value);
//          var localeString = today.toLocaleString();
          var ddd = new Date(value);
          return ddd.format('yyyy/MM/dd');
        })
      },
      hasListenedIndex(index){//watcher Status index

      },
      filterMonth() {
        this.filterMonthShow = true;
      },
      chooseMonth(e,index) {//filter by month
        this.monthStatus = e.target.innerText;
        this.monthIndex=index;
        this.filterMonthShow = false;
      },
      getProjectListData( ) {
        const PRO_LIST_DATA_URL = 'http://techexcel.devsuite.net/DevTrackApi/api/Projects?token=82E23B68-D8B5-415e-AEE1-4BA0D0B9B52E';
        this.$http.get(PRO_LIST_DATA_URL).then( response =>{
          this.projectList = response.body.data;
      }, error =>{
          console.log(error.info);
        })
      },
      showSprintList(event,index) {//show detail tasks
        //  hide or show sprint list
        this.projectId= this.projectList[index].projectId;//transfer projectId when click
        let display = $(event.currentTarget).siblings('ul').css("display");
        if ( display == 'none'){
          $(event.currentTarget).addClass("rotate");
          $(event.currentTarget).siblings('ul').css("display","block");
        }else {
          $(event.currentTarget).removeClass("rotate");
          $(event.currentTarget).siblings('ul').css("display","none");
        }
        this.$nextTick(function(){
          this.getTaskData();
        })
      },
      allProjectList(event) {
        //  hide or show all project list
        let _display = $(event.currentTarget).siblings('ul').css("display");
        if ( _display == 'none'){
          $(event.currentTarget).addClass("firstIconRotate");
          $(event.currentTarget).siblings('ul').css("display","block");
        }else {
          $(event.currentTarget).removeClass("firstIconRotate");
          $(event.currentTarget).siblings('ul').css("display","none");
        }
      },
      getStatusList() {
        const STATUS_LIST = 'http://techexcel.devsuite.net/DevTrackapi/api/Field/ChoiceList?token=82E23B68-D8B5-415e-AEE1-4BA0D0B9B52E&projectid=181&fieldid=601&languageid=1';
        this.$http.get(STATUS_LIST).then( response =>{
          this.statusList = response.body.data;
          //console.log(this.statusList);
        }, error =>{
            console.log(error);
        });
      },
      chooseStatus() {
        this.settingListShow = true;
      },
      btnOk( ){//点击时，筛选出未被选中的状态，同时设置为隐藏
        let statusIndexArr = this.selectedStatusIndex;
        let statusList =new Array(0,1,2,3,4,5,6);
        let t=[];//被选中的状态index
        let tt=[];//未被选中的状态index
        let temp = statusIndexArr.toString();
        for(let i=0; i<statusList.length; i++) {// 临时存放被选中/未选中的index
          if (temp.indexOf(statusList[i]).toString() > -1) {
            t.push(statusList[i]);
          }else {
            tt.push(statusList[i]);
          }
        }
        for( let j=0 ; j<t.length; j++) {//只要被选中，全部为true
          let statusIndex = t[j];
          this.statusList[statusIndex].IsActive = true ;
          $('.wrapper').children().eq(statusIndex).show();
        }
        for(let m =0; m<tt.length; m++) {//未被选中，一直为false
          let sIndex = tt[m];
          this.statusList[sIndex].IsActive = false ;
          $('.wrapper').children().eq(sIndex).hide();
        }
      },
      btnNo( ) {
        this.settingListShow = false;
      },
      getTaskData(){
        let projectId = this.projectId,pageSize,pageIndex,getCount,languageId,column;
        let showAll =new Boolean();
        const TASK_URL = 'http://techexcel.devsuite.net/DevTrackApi/api/task/Query';
        this.$http.post(TASK_URL,{
                  "token": '82E23B68-D8B5-415e-AEE1-4BA0D0B9B52E',
                  "projectId": projectId,
                  "showAll": false,
                  "pageSize": 10,
                  "pageIndex": 0,
                  "getCount": false,
                  "sortby": { "fieldId": 101, "order": "asc" },
                  "fields": [601,101,102,103,104,105,106,107,108,201,202,305],
                  "languageId": 0
                }).then( response =>{
                    this.tasks=response.body;
                    //将获取的数据根据status，分类到各个状态
                    let taskArray = response.body.tasks;
                    let _this = this;
                    $.each(taskArray,function(index,value){
                      var values = value['values'];
                      let choiceId= values[0].choiceid;//获取
                        //console.log(choiceId);
                      switch( choiceId ){//task status cates
                        case 3:
                          _this.qaReviewCardInfos.push(taskArray[index]);
                          break;
                        case 17:
                          _this.droppedCardInfos.push(taskArray[index]);
                          break;
                        case 36:
                          _this.verifyCardInfos.push(taskArray[index]);
                          break;
                        case 37:
                          _this.doneCardInfos.push(taskArray[index]);
                          break;
                        case 38:
                          _this.processCardInfos.push(taskArray[index]);
                          break;
                        case 39:
                          _this.reviewedCardInfos.push(taskArray[index]);
                          break;
                        case 40:
                          _this.todoCardInfos.push(taskArray[index]);
                          break;
                      }
                    })
              },error =>{
                 console.log(error);
            })
      },
      assignedName() {
        Vue.filter('assignedName', function(value) {
          let arr =value.split(' ');
          let list=[];
          for(var i=0; i<arr.length; i++) {
            list.push(arr[i].charAt(0));
          }
          let last = list.join("");
          return last;
        })
      }
    },
    components: {
      editPanel
    }
  }
</script>
<style lang="scss" scoped="" type="text/css">
  @import './boards.scss';
  @import '../../../static/grid_media.css';
  @import '../../../static/icon.css';
  @import '../../../node_modules/iview/dist/styles/iview.css';
</style>
